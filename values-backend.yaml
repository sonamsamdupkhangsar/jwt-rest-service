# Default values for mychart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  pullPolicy: Always

imagePullSecrets:
  - name: github-regcred
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

podSecurityContext: {}
# fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
# runAsUser: 1000

service:
  type: ClusterIP
#  type: NodePort
  port: 80
  targetPort: 8080

istio:
  enabled: false

ingress:
  enabled: false  # this service is not exposed to outside cluster because it is meant to be used internally only
  ingressClass: nginx
  hosts:
    - host: jwt-rest-service.sonam.cloud
      paths:
        - path: /
          pathType: Prefix
  tls:
    - secretName: sonam.cloud
      hosts:
        - "*.sonam.cloud"

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
#   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

postgres:
  port: "5432"
  service: jwt-minimal-cluster
  secretfile: sonam.jwt-minimal-cluster.credentials.postgresql.acid.zalan.do
  dbname: user

envs:
  - name: DB_SSLMODE
    value: REQUIRE
  - name: JWT_ISSUER
    value: https://www.sonam.cloud/jwts
  - name: jwt-rest-service-public-key-id
    value: http://jwt-rest-service.backend.svc.cluster.local:80/jwts/publickeys/{keyId}

health:
  liveness:
    path: /api/health/liveness
    port: 8080
    initialDelaySeconds: 5
    periodSeconds: 5
    failureThreshold: 5
  readiness:
    path: /api/health/readiness
    port: 8080
    initialDelaySeconds: 5
    periodSeconds: 5
    failureThreshold: 5

secretFiles:
  - file: eureka-discovery
    keys:
      - key: user
        name: EUREKA_USER
      - key: password
        name: EUREKA_PASSWORD
  - file: jwt-rest-service
    keys:
      - key: auth_hmackey
        name: AUTHENTICATION_REST_SERVICE_APP_HMAC_KEY
      - key: account_hmackey
        name: ACCOUNT_REST_SERVICE_APP_HMAC_KEY
      - key: user_hmackey
        name: USER_REST_SERVICE_APP_HMAC_KEY
      - key: app_hmackey
        name: APPLICATION_REST_SERVICE_APP_HMAC_KEY
